---
import '@fontsource/inter/latin-400.css';
import '@fontsource/inter/latin-500.css';
import { ViewTransitions } from 'astro:transitions';
import Footer from '../components/layout/Footer.astro';
import Header from '../components/layout/Header.astro';

interface Props {
  description: string;
  title: string;
}

const { description, title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" x-cloak x-data :class="{ 'dark': $store.theme.isDark }">
  <head>
   <meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content="/og.png" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://anapana.ai" />
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content="/og.png" />
<link rel="canonical" href="https://anapana.ai" />
  </head>
  <body
  class="bg-primary-50 text-primary-950 dark:bg-primary-950 dark:text-primary-200 antialiased transition breathing" >
    <Header />
    <main>
      <slot />
    </main>
    <Footer />
    <style is:global>
      [x-cloak] {
        display: none !important;
      }
    </style>
    <script>
      import Alpine from 'alpinejs';
      import collapse from '@alpinejs/collapse';

      Alpine.plugin(collapse);

      Alpine.store('theme', {
        init() {
          this.isDark = (() => {
            if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
              return localStorage.getItem('theme') === 'dark';
            }
            if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
              return true;
            }
            return false;
          })();
        },

        isDark: false,

        toggle() {
          this.isDark = !this.isDark;
          localStorage.setItem('theme', this.isDark ? 'dark' : 'light');
        },
      });

      window.Alpine = Alpine;
      Alpine.start();
    </script>

    <style is:global>
  /* respect users who prefer reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .breathing { animation: none !important; }
  }

  /* gentle inhale/exhale */
  @keyframes breathe {
    0%   { transform: scale(1);       filter: saturate(100%); }
    50%  { transform: scale(1.01);    filter: saturate(105%); }
    100% { transform: scale(1);       filter: saturate(100%); }
  }

  /* optional: soft background glow that ebbs/flows */
  @keyframes glow {
    0%   { box-shadow: 0 0 0px rgba(14,165,233,0.05) inset; }
    50%  { box-shadow: 0 0 40px rgba(14,165,233,0.08) inset; }
    100% { box-shadow: 0 0 0px rgba(14,165,233,0.05) inset; }
  }

  /* apply to the whole page container */
  body.breathing main {
    animation: breathe 7s ease-in-out infinite;
    transform-origin: 50% 40%;
  }

  /* (optional) a gentle ambient glow on the page background */
  body.breathing {
    animation: glow 7s ease-in-out infinite;
  }
</style>
  </body>
</html>
